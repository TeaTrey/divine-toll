generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Item {
  name                       String        @id @unique
  icon                       String
  type                       String
  tradeId                    String
  stashIndex                 Int?
  lastChecked                DateTime      @default(now())
  divineUpdatedAt            DateTime      @default(now())
  chaosUpdateAt              DateTime      @default(now())
  divineTollChaosNumerator   Float        @default(0)
    divineTollChaosDenominator   Float        @default(1)
      divineTollDivineNumerator   Float        @default(0)
    divineTollDivineDenominator   Float        @default(1)

  divineTollDivineVariance   Float         @default(-1)
  ninjaChaos                 Float         @default(-1)
  ninjaChaosUpdatedAt        DateTime      @default(now())
  chaosLastSevenDays         Float         @default(0)
  divineLastSevenDays        Float         @default(0)
  divineTollChaosConfidence  Int           @default(-1)
  divineTollChaosVariation   Float         @default(-1)
  divineTollDivineConfidence Int           @default(-1)
  dailyPrices                DailyPrice[]  @relation("dailyPrices")
  currentChaos               ChaosPrice?   @relation("currentChaos")
  chaosHistory               ChaosPrice[]  @relation("chaosHistory")
  currentDivine              DivinePrice?  @relation("currentDivine")
  divineHistory              DivinePrice[] @relation("divineHistory")
  ignored                   Boolean       @default(false)

  @@unique([stashIndex, type])
  @@index([type])
  @@index([lastChecked])
}

model ChaosPrice {
  id               Int      @id @default(autoincrement())
  highNumerator    Float
  highDenominator  Float
  lowNumerator     Float
  lowDenominator   Float
  numerator        Float
  denominator      Float
  listingsUsed     Int
  confidence       Int
  averageStock     Int
  averagePerSale   Int
  updatedAt        DateTime @default(now())
  currentItemName  String?  @unique
  itemName         String
  priceOrigin      Origin?
  pricingAlgorithm String?
  league           String?
  basedOn          String?
  information      String?
  ninjaPrice       Float?
  currentItem      Item?    @relation("currentChaos", fields: [currentItemName], references: [name], onDelete: Cascade)
  item             Item     @relation("chaosHistory", fields: [itemName], references: [name], onDelete: Cascade)

  @@index([updatedAt(sort: Desc)])
  @@index([itemName])
  @@index([currentItemName])
}

model DivinePrice {
  id               Int      @id @default(autoincrement())
  highNumerator    Float
  highDenominator  Float
  lowNumerator     Float
  lowDenominator   Float
  numerator        Float
  denominator      Float
  listingsUsed     Int
  confidence       Int
  averageStock     Int
  averagePerSale   Int
  updatedAt        DateTime @default(now())
  currentItemName  String?  @unique
  itemName         String
  priceOrigin      Origin?
  pricingAlgorithm String?
  league           String?
  basedOn          String?
  information      String?
  currentItem      Item?    @relation("currentDivine", fields: [currentItemName], references: [name], onDelete: Cascade)
  item             Item     @relation("divineHistory", fields: [itemName], references: [name], onDelete: Cascade)

  @@index([updatedAt(sort: Desc)])
  @@index([itemName])
  @@index([currentItemName])
}

model DailyPrice {
  id                  Int      @id @default(autoincrement())
  divineNumerator     Float
  divineDenominator   Float
  ninjaValue          Float
  chaosNumerator      Float
  chaosDenominator    Float
  divinepRMS          Float
  chaospRMS           Float
  divineAvgConfidence Float
  chaosAvgConfidence  Float
  day                 DateTime @unique
  itemName            String?  @unique
  item                Item?    @relation("dailyPrices", fields: [itemName], references: [name], onDelete: Cascade)

  @@unique([itemName, day])
  @@index([day(sort: Desc)])
  @@index([itemName])
}

enum Origin {
  DIVINETOLL
  POENINJA
}

