generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Item {
  name            String        @id @unique
  icon            String
  type            String
  tradeId         String
  stashIndex      Int?
  // lastChecked  DateTime      @unique @default(now())
    lastChecked  DateTime       @default(now())

  currentChaos    ChaosPrice?   @relation("currentChaos")
  chaosHistory    ChaosPrice[]  @relation("chaosHistory")
  currentDivine   DivinePrice?  @relation("currentDivine")
  divineHistory   DivinePrice[] @relation("divineHistory")

  @@index([type])
  @@index([lastChecked(sort: Asc)])
  @@unique([stashIndex(sort: Asc), type ])//Sort ascending by stashIndex
  
}

model ChaosPrice {
  id               Int      @id @default(autoincrement())
  highNumerator    Float
  highDenominator  Float
  lowNumerator     Float
  lowDenominator   Float
  numerator        Float
  denominator      Float
  basedOn         String? 
  listingsUsed     Int
  confidence       Int
  averageStock     Int
  averagePerSale   Int
  information String?
  league           String?
  pricingAlgorithm String?
  priceOrigin      Origin?
  updatedAt        DateTime @default(now())
  currentItemName  String?  @unique()
  currentItem      Item?    @relation("currentChaos", fields: [currentItemName], references: [name], onDelete: Cascade)
  item             Item     @relation("chaosHistory", fields: [itemName], references: [name], onDelete: Cascade)
  itemName         String

  

  @@index([itemName])
  @@index([currentItemName])
}

model DivinePrice {
  id               Int      @id @default(autoincrement())
  highNumerator    Float
  highDenominator  Float
  lowNumerator     Float
  lowDenominator   Float
  numerator        Float
  denominator      Float
  listingsUsed     Int
  basedOn   String?
  confidence       Int
  averageStock     Int
  averagePerSale   Int
    information String?

  league           String?
  pricingAlgorithm String?
  priceOrigin      Origin?
  updatedAt        DateTime @default(now())
  currentItemName  String?  @unique
  currentItem      Item?    @relation("currentDivine", fields: [currentItemName], references: [name], onDelete: Cascade)
  item             Item     @relation("divineHistory", fields: [itemName], references: [name], onDelete: Cascade)
  itemName         String

  @@index([itemName])
  @@index([currentItemName])
}

enum Origin {
  DIVINETOLL
  POENINJA
}
